/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode(int x) {
 *         val = x;
 *         next = null;
 *     }
 * }
 */
public class Solution {
    public ListNode getIntersectionNode(ListNode headA, ListNode headB) {
        if (headA == null || headB == null) {
            return null;
        }
        int lengthA = length(headA);
        int lengthB = length(headB);
        ListNode cur1 = headA;
        ListNode cur2 = headB;
        
        while (lengthA > lengthB) {
            cur1 = cur1.next;
            lengthA --;
        }
        
        while (lengthA < lengthB) {
            cur2 = cur2.next;
            lengthB --;
        }
        
        while (cur1 != cur2 && cur1 != null && cur2 != null) {
            cur1 = cur1.next;
            cur2 = cur2.next;
        }
        return cur1;
    }
    private int length(ListNode head) {
        int length = 0;
        ListNode cur = head;
        while (cur != null) {
            length ++;
            cur = cur.next;
        }
        return length;
    }
}
