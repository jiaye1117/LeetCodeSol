class MinStack {
    private LinkedList<Integer> minstack;
    private LinkedList<Integer> stack;

    /** initialize your data structure here. */
    public MinStack() {
        minstack = new LinkedList<>();
        stack = new LinkedList<>();
        
    }
    
    public void push(int x) {
        stack.offerFirst(x);
        
        if (minstack.isEmpty() || x <= minstack.peekFirst()) {
            minstack.offerFirst(x);
        }
    }
    
    public void pop() {
        if (stack.isEmpty()) {
            return;
        }
        
        Integer min = stack.peekFirst();
        stack.pollFirst();
        
        if (min.equals(minstack.peekFirst())) {
            minstack.pollFirst();
        }
    }
    
    public int top() {
        // if (stack.isEmpty()) {
        //     return null;
        // }
        return stack.peekFirst();
    }
    
    public int getMin() {
        // if (minstack.isEmpty()) {
        //     return null;
        // }
        return minstack.peekFirst();
    }
}

/**
 * Your MinStack object will be instantiated and called as such:
 * MinStack obj = new MinStack();
 * obj.push(x);
 * obj.pop();
 * int param_3 = obj.top();
 * int param_4 = obj.getMin();
 */
